{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  // Adjust this to match your backend URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include auth token in requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// API service methods\nexport const authService = {\n  login: credentials => api.post('/auth/login/', credentials),\n  register: userData => api.post('/auth/register/', userData),\n  updateUser: (id, userData) => api.put(`/auth/user/${id}/`, userData),\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\nexport const todoService = {\n  getTasks: () => api.get('/auth/tasks/'),\n  getTask: id => api.get(`/auth/tasks/${id}`),\n  addTask: taskData => api.post('/auth/tasks/', taskData),\n  updateTask: (id, task) => api.put(`/tasks/tasks/${id}/`, task),\n  deleteTask: id => api.delete(`/tasks/tasks/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","authService","login","credentials","post","register","userData","updateUser","id","put","logout","removeItem","todoService","getTasks","get","getTask","addTask","taskData","updateTask","task","deleteTask","delete"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance with default configuration\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8000/api', // Adjust this to match your backend URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include auth token in requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// API service methods\r\nexport const authService = {\r\n  login: (credentials) => api.post('/auth/login/', credentials),\r\n  register: (userData) => api.post('/auth/register/', userData),\r\n  updateUser: (id, userData) => api.put(`/auth/user/${id}/`, userData),\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\nexport const todoService = {\r\n  getTasks: () => api.get('/auth/tasks/'),\r\n  getTask: (id) => api.get(`/auth/tasks/${id}`),\r\n  addTask: (taskData) => api.post('/auth/tasks/', taskData), \r\n  updateTask: (id, task) => api.put(`/tasks/tasks/${id}/`, task),\r\n  deleteTask: (id) => api.delete(`/tasks/tasks/${id}`),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBC,KAAK,EAAGC,WAAW,IAAKjB,GAAG,CAACkB,IAAI,CAAC,cAAc,EAAED,WAAW,CAAC;EAC7DE,QAAQ,EAAGC,QAAQ,IAAKpB,GAAG,CAACkB,IAAI,CAAC,iBAAiB,EAAEE,QAAQ,CAAC;EAC7DC,UAAU,EAAEA,CAACC,EAAE,EAAEF,QAAQ,KAAKpB,GAAG,CAACuB,GAAG,CAAC,cAAcD,EAAE,GAAG,EAAEF,QAAQ,CAAC;EACpEI,MAAM,EAAEA,CAAA,KAAM;IACZf,YAAY,CAACgB,UAAU,CAAC,OAAO,CAAC;IAChChB,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;EACjC;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG;EACzBC,QAAQ,EAAEA,CAAA,KAAM3B,GAAG,CAAC4B,GAAG,CAAC,cAAc,CAAC;EACvCC,OAAO,EAAGP,EAAE,IAAKtB,GAAG,CAAC4B,GAAG,CAAC,eAAeN,EAAE,EAAE,CAAC;EAC7CQ,OAAO,EAAGC,QAAQ,IAAK/B,GAAG,CAACkB,IAAI,CAAC,cAAc,EAAEa,QAAQ,CAAC;EACzDC,UAAU,EAAEA,CAACV,EAAE,EAAEW,IAAI,KAAKjC,GAAG,CAACuB,GAAG,CAAC,gBAAgBD,EAAE,GAAG,EAAEW,IAAI,CAAC;EAC9DC,UAAU,EAAGZ,EAAE,IAAKtB,GAAG,CAACmC,MAAM,CAAC,gBAAgBb,EAAE,EAAE;AACrD,CAAC;AAED,eAAetB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}