{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keshi\\\\Desktop\\\\To Do List App\\\\Frontend\\\\bgs-todo-app\\\\src\\\\components\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport { authService } from '../services/api';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  token: localStorage.getItem('token') || null,\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\n\n// Create context\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n    case 'REGISTER_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'AUTH_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // login function\n  const login = async (username, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.login({\n        username,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'AUTH_ERROR',\n        payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      });\n      return false;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'REGISTER_START'\n    });\n    try {\n      const response = await authService.register(userData);\n      const {\n        user,\n        token\n      } = response.data;\n\n      // Store in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'REGISTER_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      return true;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'AUTH_ERROR',\n        payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      });\n      return false;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook for using auth context\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = React.useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useReducer","authService","jsxDEV","_jsxDEV","initialState","user","JSON","parse","localStorage","getItem","token","isAuthenticated","loading","error","AuthContext","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","login","username","password","response","data","setItem","stringify","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","useContext","undefined","Error","$RefreshReg$"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useReducer} from 'react';\r\nimport { authService } from '../services/api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: JSON.parse(localStorage.getItem('user')) || null,\r\n  token: localStorage.getItem('token') || null,\r\n  isAuthenticated: !!localStorage.getItem('token'),\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\n// Create context\r\nexport const AuthContext = createContext(initialState);\r\n\r\n// Auth reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_START':\r\n    case 'REGISTER_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n    case 'REGISTER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'AUTH_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // login function\r\n  const login = async (username, password) => {\r\n    dispatch({ type: 'LOGIN_START' });\r\n    try {\r\n      const response = await authService.login({ username, password });\r\n      const { user, token } = response.data;\r\n      \r\n      // Store in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'AUTH_ERROR',\r\n        payload: error.response?.data?.message || 'Login failed'\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    dispatch({ type: 'REGISTER_START' });\r\n    try {\r\n      \r\n      const response = await authService.register(userData);\r\n      const { user, token } = response.data;\r\n      \r\n      // Store in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: 'REGISTER_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'AUTH_ERROR',\r\n        payload: error.response?.data?.message || 'Registration failed'\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    dispatch({ type: 'LOGOUT' });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      ...state,\r\n      login,\r\n      register,\r\n      logout\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook for using auth context\r\nexport const useAuth = () => {\r\n  const context = React.useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}