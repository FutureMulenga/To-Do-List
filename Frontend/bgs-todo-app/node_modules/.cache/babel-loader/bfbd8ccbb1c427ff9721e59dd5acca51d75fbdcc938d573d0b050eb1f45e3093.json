{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  // Adjust this to match your backend URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// interceptor to include auth token in requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add this after your request interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    var _error$config, _error$config2, _error$config3, _error$response2, _error$response3, _error$response4;\n    console.error('Authentication error details:', {\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n      headers: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.headers,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n      statusText: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.statusText,\n      data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data\n    });\n  }\n  return Promise.reject(error);\n});\n\n// AUTH API service methods\nexport const authService = {\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login/', credentials);\n      // Store token immediately after successful login\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        // Add logging to debug token storage\n        console.log('Token stored successfully:', response.data.token.substring(0, 20) + '...');\n      }\n      return response;\n    } catch (error) {\n      var _error$response5;\n      console.error('Login error:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n      throw error;\n    }\n  },\n  register: userData => api.post('/auth/register/', userData),\n  updateUser: userData => api.put('/auth/user/update/', userData),\n  refreshUserData: async userId => {\n    try {\n      const response = await api.get(`/auth/users/${userId}/`);\n      // Update localStorage with fresh user data\n      localStorage.setItem('user', JSON.stringify(response.data));\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n        message: 'Failed to refresh user data'\n      };\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\n\n// TASK API service methods\nexport const todoService = {\n  getTasks: () => api.get('/tasks/tasks/'),\n  getTask: id => api.get(`/tasks/tasks/${id}`),\n  addTask: taskData => api.post('/tasks/tasks/', taskData),\n  updateTask: (id, task) => api.put(`/tasks/tasks/${id}/`, task),\n  deleteTask: id => api.delete(`/tasks/tasks/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","_error$config","_error$config2","_error$config3","_error$response2","_error$response3","_error$response4","console","url","method","statusText","data","authService","login","credentials","post","setItem","log","substring","_error$response5","message","register","userData","updateUser","put","refreshUserData","userId","get","JSON","stringify","_error$response6","logout","removeItem","todoService","getTasks","getTask","id","addTask","taskData","updateTask","task","deleteTask","delete"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance with default configuration\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8000/api', // Adjust this to match your backend URL\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n\r\n\r\n// interceptor to include auth token in requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add this after your request interceptor\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      console.error('Authentication error details:', {\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n        headers: error.config?.headers,\r\n        status: error.response?.status,\r\n        statusText: error.response?.statusText,\r\n        data: error.response?.data\r\n      });\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\n// AUTH API service methods\r\nexport const authService = {\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await api.post('/auth/login/', credentials);\r\n      // Store token immediately after successful login\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        // Add logging to debug token storage\r\n        console.log('Token stored successfully:', response.data.token.substring(0, 20) + '...');\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Login error:', error.response?.data || error.message);\r\n      throw error;\r\n    }\r\n  },\r\n  register: (userData) => api.post('/auth/register/', userData),\r\n  updateUser: (userData) => api.put('/auth/user/update/', userData),\r\n  refreshUserData: async (userId) => {\r\n    try {\r\n      const response = await api.get(`/auth/users/${userId}/`);\r\n      // Update localStorage with fresh user data\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to refresh user data' };\r\n    }\r\n  },\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  }\r\n};\r\n\r\n\r\n// TASK API service methods\r\nexport const todoService = {\r\n  getTasks: () => api.get('/tasks/tasks/'),\r\n  getTask: (id) => api.get(`/tasks/tasks/${id}`),\r\n  addTask: (taskData) => api.post('/tasks/tasks/', taskData), \r\n  updateTask: (id, task) => api.put(`/tasks/tasks/${id}/`, task),\r\n  deleteTask: (id) => api.delete(`/tasks/tasks/${id}`),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}