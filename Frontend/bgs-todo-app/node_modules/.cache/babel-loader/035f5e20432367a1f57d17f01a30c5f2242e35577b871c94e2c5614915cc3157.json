{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keshi\\\\Desktop\\\\To Do List App\\\\Frontend\\\\bgs-todo-app\\\\src\\\\components\\\\pages\\\\todolist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Flag, Tag, Clock } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport '../assets/css/todoitem.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = () => {\n  _s();\n  const {\n    getTasks,\n    updateTask,\n    deleteTask\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const [editForm, setEditForm] = useState({\n    title: '',\n    due_date: '',\n    priority: '',\n    category: ''\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const tasksData = await getTasks();\n      setTasks(tasksData);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch tasks');\n      setLoading(false);\n    }\n  };\n\n  // Updating task\n  const handleUpdate = async (id, updatedTask) => {\n    try {\n      setLoading(true);\n      // Call the API to update the task\n      await updateTask(id, updatedTask);\n\n      // Update local state only after successful API call\n      const updatedTasks = tasks.map(task => task.id === id ? {\n        ...task,\n        ...updatedTask\n      } : task);\n      setTasks(updatedTasks);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Update error:\", err);\n      setError('Failed to update task: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Deleting task\n  const handleDelete = async id => {\n    try {\n      setLoading(true);\n      // Call the API to delete the task\n      await deleteTask(id);\n\n      // Update local state only after successful API call\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to delete task: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Editing task\n  const handleEditClick = task => {\n    setEditingTask(task.id);\n    setEditForm({\n      title: task.title,\n      due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '',\n      priority: task.priority || 'medium',\n      category: task.category || ''\n    });\n  };\n  const handleEditSubmit = async id => {\n    try {\n      // Format date properly for Django\n      const formData = {\n        ...editForm\n      };\n      if (formData.due_date) {\n        // Ensure date is in correct ISO format with time for Django\n        formData.due_date = `${formData.due_date}T00:00:00Z`;\n      }\n      await updateTask(id, formData);\n      setEditingTask(null);\n      fetchTasks(); // Refresh the task list\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Edit submit error:\", err);\n      setError('Failed to update task: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const formatDueDate = dueDate => {\n    const date = new Date(dueDate);\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n\n    // Check if due date is today\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    }\n    // Check if due date is tomorrow\n    if (date.toDateString() === tomorrow.toDateString()) {\n      return 'Tomorrow';\n    }\n    // Check if due date was yesterday\n    if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    }\n\n    // Format other dates\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\n    });\n  };\n\n  // Calculate how many days a task is overdue\n  const getDaysOverdue = dueDate => {\n    const date = new Date(dueDate);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    date.setHours(0, 0, 0, 0);\n    const diffTime = today.getTime() - date.getTime();\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  };\n\n  // Group tasks by due date\n  const groupTasks = tasks => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const nextWeek = new Date(today);\n    nextWeek.setDate(today.getDate() + 7);\n    return {\n      overdue: tasks.filter(task => {\n        if (!task.due_date || task.completed) return false;\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate < today;\n      }),\n      today: tasks.filter(task => {\n        if (!task.due_date) return false;\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate.getTime() === today.getTime();\n      }),\n      upcoming: tasks.filter(task => {\n        if (!task.due_date) return false;\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > today && taskDate <= nextWeek;\n      }),\n      later: tasks.filter(task => {\n        if (!task.due_date) return false;\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > nextWeek;\n      }),\n      completed: tasks.filter(task => task.completed),\n      noDueDate: tasks.filter(task => !task.due_date && !task.completed)\n    };\n  };\n\n  // Handle extending due date for overdue tasks\n  const handleExtendDueDate = async (task, days) => {\n    try {\n      const newDueDate = new Date();\n      newDueDate.setDate(newDueDate.getDate() + days);\n\n      // Format for Django API\n      const formattedDate = newDueDate.toISOString().split('T')[0] + 'T00:00:00Z';\n      await updateTask(task.id, {\n        due_date: formattedDate\n      });\n      fetchTasks(); // Refresh the task list\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error(\"Extend due date error:\", err);\n      setError('Failed to extend due date: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n\n  // Render task groups\n  const renderTaskGroup = (tasks, title, isOverdue = false) => {\n    if (!tasks || tasks.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-group ${isOverdue ? 'overdue-group' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `task-group-title ${isOverdue ? 'overdue-title' : ''}`,\n        children: [title, isOverdue && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"overdue-count\",\n          children: tasks.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item ${task.completed ? 'completed' : ''} ${isOverdue ? 'overdue-item' : ''}`,\n        children: editingTask === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editForm.title,\n            onChange: e => setEditForm({\n              ...editForm,\n              title: e.target.value\n            }),\n            className: \"edit-input\",\n            placeholder: \"Task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editForm.due_date,\n            onChange: e => setEditForm({\n              ...editForm,\n              due_date: e.target.value\n            }),\n            className: \"edit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editForm.priority,\n            onChange: e => setEditForm({\n              ...editForm,\n              priority: e.target.value\n            }),\n            className: \"edit-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editForm.category,\n            onChange: e => setEditForm({\n              ...editForm,\n              category: e.target.value\n            }),\n            className: \"edit-input\",\n            placeholder: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditSubmit(task.id),\n              className: \"save-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingTask(null),\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => handleUpdate(task.id, {\n                completed: !task.completed\n              }),\n              className: \"todo-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todo-title\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-metadata\",\n                children: [task.due_date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `todo-due-date ${new Date(task.due_date) < new Date() && !task.completed ? 'overdue' : new Date(task.due_date).toDateString() === new Date().toDateString() ? 'due-today' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 27\n                  }, this), formatDueDate(task.due_date), isOverdue && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"overdue-days\",\n                    children: [/*#__PURE__*/_jsxDEV(Clock, {\n                      size: 14,\n                      className: \"inline-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 31\n                    }, this), getDaysOverdue(task.due_date), \" \", getDaysOverdue(task.due_date) === 1 ? 'day' : 'days', \" overdue\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), task.priority && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `todo-priority ${task.priority === 'high' ? 'text-red-500' : task.priority === 'medium' ? 'text-yellow-500' : 'text-green-500'}`,\n                  children: [/*#__PURE__*/_jsxDEV(Flag, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 27\n                  }, this), task.priority.charAt(0).toUpperCase() + task.priority.slice(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this), task.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"todo-category\",\n                  children: [/*#__PURE__*/_jsxDEV(Tag, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 27\n                  }, this), task.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-actions\",\n            children: [isOverdue && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overdue-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleExtendDueDate(task, 1),\n                className: \"extend-btn\",\n                title: \"Extend to tomorrow\",\n                children: \"+1 Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleExtendDueDate(task, 7),\n                className: \"extend-btn\",\n                title: \"Extend by one week\",\n                children: \"+1 Week\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(task),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              className: \"delete-btn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-loading\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedTasks = groupTasks(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-tasks\",\n      children: \"No tasks found. Add a task to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderTaskGroup(groupedTasks.overdue, \"Overdue Tasks\", true), renderTaskGroup(groupedTasks.today, \"Today's Tasks\"), renderTaskGroup(groupedTasks.upcoming, \"This Week's Tasks\"), renderTaskGroup(groupedTasks.later, \"Upcoming Tasks\"), renderTaskGroup(groupedTasks.noDueDate, \"Tasks without Due Date\"), renderTaskGroup(groupedTasks.completed, \"Completed Tasks\")]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"U8L3LqdqanwI0kHN+kGVmuJdvhc=\", false, function () {\n  return [useAuth];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Flag","Tag","Clock","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_s","getTasks","updateTask","deleteTask","tasks","setTasks","loading","setLoading","error","setError","editingTask","setEditingTask","editForm","setEditForm","title","due_date","priority","category","fetchTasks","tasksData","err","handleUpdate","id","updatedTask","updatedTasks","map","task","_err$response","_err$response$data","console","response","data","message","handleDelete","filter","_err$response2","_err$response2$data","handleEditClick","Date","toISOString","split","handleEditSubmit","formData","_err$response3","_err$response3$data","formatDueDate","dueDate","date","today","tomorrow","setDate","getDate","yesterday","toDateString","toLocaleDateString","month","day","year","getFullYear","undefined","getDaysOverdue","setHours","diffTime","getTime","diffDays","Math","floor","groupTasks","nextWeek","overdue","completed","taskDate","upcoming","later","noDueDate","handleExtendDueDate","days","newDueDate","formattedDate","_err$response4","_err$response4$data","renderTaskGroup","isOverdue","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","checked","size","charAt","toUpperCase","slice","groupedTasks","_c","$RefreshReg$"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/pages/todolist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, Flag, Tag, Clock } from 'lucide-react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../assets/css/todoitem.css';\r\n\r\nconst TodoItem = () => {\r\n  const { getTasks, updateTask, deleteTask } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [editForm, setEditForm] = useState({\r\n    title: '',\r\n    due_date: '',\r\n    priority: '',\r\n    category: ''\r\n  });\r\n  \r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const tasksData = await getTasks();\r\n      setTasks(tasksData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch tasks');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Updating task\r\n  const handleUpdate = async (id, updatedTask) => {\r\n    try {\r\n      setLoading(true);\r\n      // Call the API to update the task\r\n      await updateTask(id, updatedTask);\r\n      \r\n      // Update local state only after successful API call\r\n      const updatedTasks = tasks.map(task => \r\n        task.id === id ? { ...task, ...updatedTask } : task\r\n      );\r\n      setTasks(updatedTasks);\r\n    } catch (err) {\r\n      console.error(\"Update error:\", err);\r\n      setError('Failed to update task: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Deleting task\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      // Call the API to delete the task\r\n      await deleteTask(id);\r\n      \r\n      // Update local state only after successful API call\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete task: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Editing task\r\n  const handleEditClick = (task) => {\r\n    setEditingTask(task.id);\r\n    setEditForm({\r\n      title: task.title,\r\n      due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '',\r\n      priority: task.priority || 'medium',\r\n      category: task.category || ''\r\n    });\r\n  };\r\n\r\n  const handleEditSubmit = async (id) => {\r\n    try {\r\n      // Format date properly for Django\r\n      const formData = { ...editForm };\r\n      if (formData.due_date) {\r\n        // Ensure date is in correct ISO format with time for Django\r\n        formData.due_date = `${formData.due_date}T00:00:00Z`;\r\n      }\r\n      \r\n      await updateTask(id, formData);\r\n      setEditingTask(null);\r\n      fetchTasks(); // Refresh the task list\r\n    } catch (err) {\r\n      console.error(\"Edit submit error:\", err);\r\n      setError('Failed to update task: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const formatDueDate = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const today = new Date();\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    \r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    // Check if due date is today\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Today';\r\n    }\r\n    // Check if due date is tomorrow\r\n    if (date.toDateString() === tomorrow.toDateString()) {\r\n      return 'Tomorrow';\r\n    }\r\n    // Check if due date was yesterday\r\n    if (date.toDateString() === yesterday.toDateString()) {\r\n      return 'Yesterday';\r\n    }\r\n    \r\n    // Format other dates\r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\r\n    });\r\n  };\r\n\r\n  // Calculate how many days a task is overdue\r\n  const getDaysOverdue = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    date.setHours(0, 0, 0, 0);\r\n    \r\n    const diffTime = today.getTime() - date.getTime();\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    return diffDays;\r\n  };\r\n\r\n  // Group tasks by due date\r\n  const groupTasks = (tasks) => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const nextWeek = new Date(today);\r\n    nextWeek.setDate(today.getDate() + 7);\r\n\r\n    return {\r\n      overdue: tasks.filter(task => {\r\n        if (!task.due_date || task.completed) return false;\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate < today;\r\n      }),\r\n      today: tasks.filter(task => {\r\n        if (!task.due_date) return false;\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate.getTime() === today.getTime();\r\n      }),\r\n      upcoming: tasks.filter(task => {\r\n        if (!task.due_date) return false;\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate > today && taskDate <= nextWeek;\r\n      }),\r\n      later: tasks.filter(task => {\r\n        if (!task.due_date) return false;\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate > nextWeek;\r\n      }),\r\n      completed: tasks.filter(task => task.completed),\r\n      noDueDate: tasks.filter(task => !task.due_date && !task.completed)\r\n    };\r\n  };\r\n\r\n  // Handle extending due date for overdue tasks\r\n  const handleExtendDueDate = async (task, days) => {\r\n    try {\r\n      const newDueDate = new Date();\r\n      newDueDate.setDate(newDueDate.getDate() + days);\r\n      \r\n      // Format for Django API\r\n      const formattedDate = newDueDate.toISOString().split('T')[0] + 'T00:00:00Z';\r\n      \r\n      await updateTask(task.id, { due_date: formattedDate });\r\n      fetchTasks(); // Refresh the task list\r\n    } catch (err) {\r\n      console.error(\"Extend due date error:\", err);\r\n      setError('Failed to extend due date: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  // Render task groups\r\n  const renderTaskGroup = (tasks, title, isOverdue = false) => {\r\n    if (!tasks || tasks.length === 0) return null;\r\n\r\n    return (\r\n      <div className={`task-group ${isOverdue ? 'overdue-group' : ''}`}>\r\n        <h2 className={`task-group-title ${isOverdue ? 'overdue-title' : ''}`}>\r\n          {title}\r\n          {isOverdue && <span className=\"overdue-count\">{tasks.length}</span>}\r\n        </h2>\r\n        {tasks.map(task => (\r\n          <div key={task.id} className={`todo-item ${task.completed ? 'completed' : ''} ${isOverdue ? 'overdue-item' : ''}`}>\r\n            {editingTask === task.id ? (\r\n              <div className=\"edit-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.title}\r\n                  onChange={(e) => setEditForm({...editForm, title: e.target.value})}\r\n                  className=\"edit-input\"\r\n                  placeholder=\"Task title\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  value={editForm.due_date}\r\n                  onChange={(e) => setEditForm({...editForm, due_date: e.target.value})}\r\n                  className=\"edit-input\"\r\n                />\r\n                <select\r\n                  value={editForm.priority}\r\n                  onChange={(e) => setEditForm({...editForm, priority: e.target.value})}\r\n                  className=\"edit-input\"\r\n                >\r\n                  <option value=\"low\">Low</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"high\">High</option>\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.category}\r\n                  onChange={(e) => setEditForm({...editForm, category: e.target.value})}\r\n                  className=\"edit-input\"\r\n                  placeholder=\"Category\"\r\n                />\r\n                <div className=\"edit-actions\">\r\n                  <button \r\n                    onClick={() => handleEditSubmit(task.id)}\r\n                    className=\"save-btn\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button \r\n                    onClick={() => setEditingTask(null)}\r\n                    className=\"cancel-btn\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"todo-content\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={() => handleUpdate(task.id, { completed: !task.completed })}\r\n                    className=\"todo-checkbox\"\r\n                  />\r\n                  <div className=\"todo-details\">\r\n                    <span className=\"todo-title\">{task.title}</span>\r\n                    \r\n                    <div className=\"todo-metadata\">\r\n                      {task.due_date && (\r\n                        <span className={`todo-due-date ${\r\n                          new Date(task.due_date) < new Date() && !task.completed \r\n                            ? 'overdue' \r\n                            : new Date(task.due_date).toDateString() === new Date().toDateString() \r\n                              ? 'due-today'\r\n                              : ''\r\n                        }`}>\r\n                          <Calendar size={14} className=\"inline-icon\" />\r\n                          {formatDueDate(task.due_date)}\r\n                          {isOverdue && (\r\n                            <span className=\"overdue-days\">\r\n                              <Clock size={14} className=\"inline-icon\" />\r\n                              {getDaysOverdue(task.due_date)} {getDaysOverdue(task.due_date) === 1 ? 'day' : 'days'} overdue\r\n                            </span>\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                      \r\n                      {task.priority && (\r\n                        <span className={`todo-priority ${task.priority === 'high' ? 'text-red-500' : task.priority === 'medium' ? 'text-yellow-500' : 'text-green-500'}`}>\r\n                          <Flag size={14} className=\"inline-icon\" />\r\n                          {task.priority.charAt(0).toUpperCase() + task.priority.slice(1)}\r\n                        </span>\r\n                      )}\r\n                      \r\n                      {task.category && (\r\n                        <span className=\"todo-category\">\r\n                          <Tag size={14} className=\"inline-icon\" />\r\n                          {task.category}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"todo-actions\">\r\n                  {isOverdue && (\r\n                    <div className=\"overdue-actions\">\r\n                      <button \r\n                        onClick={() => handleExtendDueDate(task, 1)} \r\n                        className=\"extend-btn\"\r\n                        title=\"Extend to tomorrow\"\r\n                      >\r\n                        +1 Day\r\n                      </button>\r\n                      <button \r\n                        onClick={() => handleExtendDueDate(task, 7)} \r\n                        className=\"extend-btn\"\r\n                        title=\"Extend by one week\"\r\n                      >\r\n                        +1 Week\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  <button onClick={() => handleEditClick(task)} className=\"edit-btn\">\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDelete(task.id)} className=\"delete-btn\">\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"todo-list-loading\">Loading tasks...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"todo-list-error\">{error}</div>;\r\n  }\r\n\r\n  const groupedTasks = groupTasks(tasks);\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {tasks.length === 0 ? (\r\n        <div className=\"no-tasks\">No tasks found. Add a task to get started!</div>\r\n      ) : (\r\n        <>\r\n          {renderTaskGroup(groupedTasks.overdue, \"Overdue Tasks\", true)}\r\n          {renderTaskGroup(groupedTasks.today, \"Today's Tasks\")}\r\n          {renderTaskGroup(groupedTasks.upcoming, \"This Week's Tasks\")}\r\n          {renderTaskGroup(groupedTasks.later, \"Upcoming Tasks\")}\r\n          {renderTaskGroup(groupedTasks.noDueDate, \"Tasks without Due Date\")}\r\n          {renderTaskGroup(groupedTasks.completed, \"Completed Tasks\")}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}