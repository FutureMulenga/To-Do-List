{"ast":null,"code":"const isTokenExpired = token => {\n  if (!token) return true;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const expirationTime = payload.exp * 1000; // Convert to milliseconds\n    return Date.now() >= expirationTime;\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return true;\n  }\n};\nexport default isTokenExpired;","map":{"version":3,"names":["isTokenExpired","token","payload","JSON","parse","atob","split","expirationTime","exp","Date","now","error","console"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/utility/tokenExpired.js"],"sourcesContent":["const isTokenExpired = (token) => {\r\n    if (!token) return true;\r\n    \r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const expirationTime = payload.exp * 1000; // Convert to milliseconds\r\n      return Date.now() >= expirationTime;\r\n    } catch (error) {\r\n      console.error('Error parsing token:', error);\r\n      return true;\r\n    }\r\n  };\r\n\r\n\r\nexport default isTokenExpired;"],"mappings":"AAAA,MAAMA,cAAc,GAAIC,KAAK,IAAK;EAC9B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,cAAc,GAAGL,OAAO,CAACM,GAAG,GAAG,IAAI,CAAC,CAAC;IAC3C,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIH,cAAc;EACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAGH,eAAeX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}