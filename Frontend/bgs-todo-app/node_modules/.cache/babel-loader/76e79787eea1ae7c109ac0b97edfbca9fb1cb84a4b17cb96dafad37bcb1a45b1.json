{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keshi\\\\Desktop\\\\To Do List App\\\\Frontend\\\\bgs-todo-app\\\\src\\\\components\\\\pages\\\\todolist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Flag, Tag, AlertCircle, X } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport '../assets/css/todoitem.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = () => {\n  _s();\n  const {\n    getTasks,\n    updateTask,\n    deleteTask\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const [editForm, setEditForm] = useState({\n    title: '',\n    due_date: '',\n    // Changed from dueDate to due_date to match backend\n    priority: '',\n    category: ''\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const tasksData = await getTasks();\n      setTasks(tasksData);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch tasks');\n      setLoading(false);\n    }\n  };\n\n  // Updating task\n  const handleUpdate = async (id, updatedTask) => {\n    try {\n      setLoading(true);\n      // Call the API to update the task\n      await updateTask(id, updatedTask);\n\n      // Update local state only after successful API call\n      const updatedTasks = tasks.map(task => task.id === id ? {\n        ...task,\n        ...updatedTask\n      } : task);\n      setTasks(updatedTasks);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Update error:\", err);\n      setError('Failed to update task: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Deleting task\n  const handleDelete = async id => {\n    try {\n      setLoading(true);\n      // Call the API to delete the task\n      await deleteTask(id);\n\n      // Update local state only after successful API call\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to delete task: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Editing task\n  const handleEditClick = task => {\n    setEditingTask(task.id);\n    setEditForm({\n      title: task.title,\n      due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '',\n      // Changed from dueDate to due_date\n      priority: task.priority || 'medium',\n      category: task.category || ''\n    });\n  };\n  const handleEditSubmit = async id => {\n    try {\n      // Format date properly for Django\n      const formData = {\n        ...editForm\n      };\n      if (formData.due_date) {\n        // Ensure date is in correct ISO format with time for Django\n        formData.due_date = `${formData.due_date}T00:00:00Z`;\n      }\n      await updateTask(id, formData);\n      setEditingTask(null);\n      fetchTasks(); // Refresh the task list\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Edit submit error:\", err);\n      setError('Failed to update task: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const formatDueDate = dueDate => {\n    const date = new Date(dueDate);\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    // Check if due date is today\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    }\n    // Check if due date is tomorrow\n    if (date.toDateString() === tomorrow.toDateString()) {\n      return 'Tomorrow';\n    }\n    // Format other dates\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\n    });\n  };\n\n  // Group tasks by due date\n  const groupTasks = tasks => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const nextWeek = new Date(today);\n    nextWeek.setDate(today.getDate() + 7);\n    return {\n      today: tasks.filter(task => {\n        if (!task.due_date) return false; // Changed from dueDate to due_date\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate.getTime() === today.getTime();\n      }),\n      upcoming: tasks.filter(task => {\n        if (!task.due_date) return false; // Changed from dueDate to due_date\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > today && taskDate <= nextWeek;\n      }),\n      later: tasks.filter(task => {\n        if (!task.due_date) return false; // Changed from dueDate to due_date\n        const taskDate = new Date(task.due_date);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > nextWeek;\n      }),\n      noDueDate: tasks.filter(task => !task.due_date) // Changed from dueDate to due_date\n    };\n  };\n\n  // Render task groups\n  const renderTaskGroup = (tasks, title) => {\n    if (!tasks || tasks.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"task-group-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item ${task.completed ? 'completed' : ''}`,\n        children: editingTask === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editForm.title,\n            onChange: e => setEditForm({\n              ...editForm,\n              title: e.target.value\n            }),\n            className: \"edit-input\",\n            placeholder: \"Task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editForm.due_date,\n            onChange: e => setEditForm({\n              ...editForm,\n              due_date: e.target.value\n            }),\n            className: \"edit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editForm.priority,\n            onChange: e => setEditForm({\n              ...editForm,\n              priority: e.target.value\n            }),\n            className: \"edit-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editForm.category,\n            onChange: e => setEditForm({\n              ...editForm,\n              category: e.target.value\n            }),\n            className: \"edit-input\",\n            placeholder: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditSubmit(task.id),\n              className: \"save-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingTask(null),\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => handleUpdate(task.id, {\n                completed: !task.completed\n              }),\n              className: \"todo-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todo-title\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-metadata\",\n                children: [task.due_date && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `todo-due-date ${new Date(task.due_date) < new Date() && !task.completed ? 'overdue' : new Date(task.due_date).toDateString() === new Date().toDateString() ? 'due-today' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this), formatDueDate(task.due_date), new Date(task.due_date) < new Date() && !task.completed && /*#__PURE__*/_jsxDEV(AlertCircle, {\n                    size: 14,\n                    className: \"ml-1 inline-icon text-red-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this), task.priority && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `todo-priority ${task.priority === 'high' ? 'text-red-500' : task.priority === 'medium' ? 'text-yellow-500' : 'text-green-500'}`,\n                  children: [/*#__PURE__*/_jsxDEV(Flag, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 27\n                  }, this), task.priority.charAt(0).toUpperCase() + task.priority.slice(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 25\n                }, this), task.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"todo-category\",\n                  children: [/*#__PURE__*/_jsxDEV(Tag, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 27\n                  }, this), task.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(task),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              className: \"delete-btn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-loading\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedTasks = groupTasks(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-tasks\",\n      children: \"No tasks found. Add a task to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderTaskGroup(groupedTasks.today, \"Today's Tasks\"), renderTaskGroup(groupedTasks.upcoming, \"This Week's Tasks\"), renderTaskGroup(groupedTasks.later, \"Upcoming Tasks\"), renderTaskGroup(groupedTasks.noDueDate, \"Tasks without Due Date\")]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"p9FVIFw9WxOgFwlJ1siTFCuiDmM=\", false, function () {\n  return [useAuth];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Flag","Tag","AlertCircle","X","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_s","getTasks","updateTask","deleteTask","tasks","setTasks","loading","setLoading","error","setError","editingTask","setEditingTask","editForm","setEditForm","title","due_date","priority","category","fetchTasks","tasksData","err","handleUpdate","id","updatedTask","updatedTasks","map","task","_err$response","_err$response$data","console","response","data","message","handleDelete","filter","_err$response2","_err$response2$data","handleEditClick","Date","toISOString","split","handleEditSubmit","formData","_err$response3","_err$response3$data","formatDueDate","dueDate","date","today","tomorrow","setDate","getDate","toDateString","toLocaleDateString","month","day","year","getFullYear","undefined","groupTasks","setHours","nextWeek","taskDate","getTime","upcoming","later","noDueDate","renderTaskGroup","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","completed","type","value","onChange","e","target","placeholder","onClick","checked","size","charAt","toUpperCase","slice","groupedTasks","_c","$RefreshReg$"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/pages/todolist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, Flag, Tag, AlertCircle, X } from 'lucide-react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../assets/css/todoitem.css';\r\n\r\nconst TodoItem = () => {\r\n  const { getTasks, updateTask, deleteTask } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [editForm, setEditForm] = useState({\r\n    title: '',\r\n    due_date: '', // Changed from dueDate to due_date to match backend\r\n    priority: '',\r\n    category: ''\r\n  });\r\n  \r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const tasksData = await getTasks();\r\n      setTasks(tasksData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch tasks');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Updating task\r\n  const handleUpdate = async (id, updatedTask) => {\r\n    try {\r\n      setLoading(true);\r\n      // Call the API to update the task\r\n      await updateTask(id, updatedTask);\r\n      \r\n      // Update local state only after successful API call\r\n      const updatedTasks = tasks.map(task => \r\n        task.id === id ? { ...task, ...updatedTask } : task\r\n      );\r\n      setTasks(updatedTasks);\r\n    } catch (err) {\r\n      console.error(\"Update error:\", err);\r\n      setError('Failed to update task: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Deleting task\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      // Call the API to delete the task\r\n      await deleteTask(id);\r\n      \r\n      // Update local state only after successful API call\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete task: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Editing task\r\n  const handleEditClick = (task) => {\r\n    setEditingTask(task.id);\r\n    setEditForm({\r\n      title: task.title,\r\n      due_date: task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '', // Changed from dueDate to due_date\r\n      priority: task.priority || 'medium',\r\n      category: task.category || ''\r\n    });\r\n  };\r\n\r\n  const handleEditSubmit = async (id) => {\r\n    try {\r\n      // Format date properly for Django\r\n      const formData = { ...editForm };\r\n      if (formData.due_date) {\r\n        // Ensure date is in correct ISO format with time for Django\r\n        formData.due_date = `${formData.due_date}T00:00:00Z`;\r\n      }\r\n      \r\n      await updateTask(id, formData);\r\n      setEditingTask(null);\r\n      fetchTasks(); // Refresh the task list\r\n    } catch (err) {\r\n      console.error(\"Edit submit error:\", err);\r\n      setError('Failed to update task: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const formatDueDate = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const today = new Date();\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n    // Check if due date is today\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Today';\r\n    }\r\n    // Check if due date is tomorrow\r\n    if (date.toDateString() === tomorrow.toDateString()) {\r\n      return 'Tomorrow';\r\n    }\r\n    // Format other dates\r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\r\n    });\r\n  };\r\n\r\n  // Group tasks by due date\r\n  const groupTasks = (tasks) => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const nextWeek = new Date(today);\r\n    nextWeek.setDate(today.getDate() + 7);\r\n\r\n    return {\r\n      today: tasks.filter(task => {\r\n        if (!task.due_date) return false; // Changed from dueDate to due_date\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate.getTime() === today.getTime();\r\n      }),\r\n      upcoming: tasks.filter(task => {\r\n        if (!task.due_date) return false; // Changed from dueDate to due_date\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate > today && taskDate <= nextWeek;\r\n      }),\r\n      later: tasks.filter(task => {\r\n        if (!task.due_date) return false; // Changed from dueDate to due_date\r\n        const taskDate = new Date(task.due_date);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate > nextWeek;\r\n      }),\r\n      noDueDate: tasks.filter(task => !task.due_date) // Changed from dueDate to due_date\r\n    };\r\n  };\r\n\r\n  // Render task groups\r\n  const renderTaskGroup = (tasks, title) => {\r\n    if (!tasks || tasks.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"task-group\">\r\n        <h2 className=\"task-group-title\">{title}</h2>\r\n        {tasks.map(task => (\r\n          <div key={task.id} className={`todo-item ${task.completed ? 'completed' : ''}`}>\r\n            {editingTask === task.id ? (\r\n              <div className=\"edit-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.title}\r\n                  onChange={(e) => setEditForm({...editForm, title: e.target.value})}\r\n                  className=\"edit-input\"\r\n                  placeholder=\"Task title\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  value={editForm.due_date}\r\n                  onChange={(e) => setEditForm({...editForm, due_date: e.target.value})}\r\n                  className=\"edit-input\"\r\n                />\r\n                <select\r\n                  value={editForm.priority}\r\n                  onChange={(e) => setEditForm({...editForm, priority: e.target.value})}\r\n                  className=\"edit-input\"\r\n                >\r\n                  <option value=\"low\">Low</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"high\">High</option>\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.category}\r\n                  onChange={(e) => setEditForm({...editForm, category: e.target.value})}\r\n                  className=\"edit-input\"\r\n                  placeholder=\"Category\"\r\n                />\r\n                <div className=\"edit-actions\">\r\n                  <button \r\n                    onClick={() => handleEditSubmit(task.id)}\r\n                    className=\"save-btn\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button \r\n                    onClick={() => setEditingTask(null)}\r\n                    className=\"cancel-btn\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"todo-content\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={() => handleUpdate(task.id, { completed: !task.completed })}\r\n                    className=\"todo-checkbox\"\r\n                  />\r\n                  <div className=\"todo-details\">\r\n                    <span className=\"todo-title\">{task.title}</span>\r\n                    \r\n                    <div className=\"todo-metadata\">\r\n                      {task.due_date && (\r\n                        <span className={`todo-due-date ${\r\n                          new Date(task.due_date) < new Date() && !task.completed \r\n                            ? 'overdue' \r\n                            : new Date(task.due_date).toDateString() === new Date().toDateString() \r\n                              ? 'due-today'\r\n                              : ''\r\n                        }`}>\r\n                          <Calendar size={14} className=\"inline-icon\" />\r\n                          {formatDueDate(task.due_date)}\r\n                          {new Date(task.due_date) < new Date() && !task.completed && (\r\n                            <AlertCircle size={14} className=\"ml-1 inline-icon text-red-500\" />\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                      \r\n                      {task.priority && (\r\n                        <span className={`todo-priority ${task.priority === 'high' ? 'text-red-500' : task.priority === 'medium' ? 'text-yellow-500' : 'text-green-500'}`}>\r\n                          <Flag size={14} className=\"inline-icon\" />\r\n                          {task.priority.charAt(0).toUpperCase() + task.priority.slice(1)}\r\n                        </span>\r\n                      )}\r\n                      \r\n                      {task.category && (\r\n                        <span className=\"todo-category\">\r\n                          <Tag size={14} className=\"inline-icon\" />\r\n                          {task.category}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"todo-actions\">\r\n                  <button onClick={() => handleEditClick(task)} className=\"edit-btn\">\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDelete(task.id)} className=\"delete-btn\">\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"todo-list-loading\">Loading tasks...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"todo-list-error\">{error}</div>;\r\n  }\r\n\r\n  const groupedTasks = groupTasks(tasks);\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {tasks.length === 0 ? (\r\n        <div className=\"no-tasks\">No tasks found. Add a task to get started!</div>\r\n      ) : (\r\n        <>\r\n          {renderTaskGroup(groupedTasks.today, \"Today's Tasks\")}\r\n          {renderTaskGroup(groupedTasks.upcoming, \"This Week's Tasks\")}\r\n          {renderTaskGroup(groupedTasks.later, \"Upcoming Tasks\")}\r\n          {renderTaskGroup(groupedTasks.noDueDate, \"Tasks without Due Date\")}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}