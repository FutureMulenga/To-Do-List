{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keshi\\\\Desktop\\\\To Do List App\\\\Frontend\\\\bgs-todo-app\\\\src\\\\components\\\\pages\\\\todolist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Flag, Tag, AlertCircle, X } from 'lucide-react';\nimport { useAuth } from '../context/AuthContext';\nimport '../assets/css/todoitem.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = () => {\n  _s();\n  const {\n    getTasks,\n    updateTask,\n    deleteTask\n  } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const [editForm, setEditForm] = useState({\n    title: '',\n    dueDate: '',\n    priority: '',\n    category: ''\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const tasksData = await getTasks();\n      setTasks(tasksData);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch tasks');\n      setLoading(false);\n    }\n  };\n\n  //updting task\n  // Note: The API should return the updated task object after a successful update\n  const handleUpdate = async (id, updatedTask) => {\n    try {\n      setLoading(true);\n      // Call the API to update the task\n      await updateTask(id, updatedTask);\n\n      // Update local state only after successful API call\n      const updatedTasks = tasks.map(task => task.id === id ? {\n        ...task,\n        ...updatedTask\n      } : task);\n      setTasks(updatedTasks);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Failed to update task: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //deteleting task\n  // Note: The API should return a success message or status code after deletion\n  const handleDelete = async id => {\n    try {\n      setLoading(true);\n      // Call the API to delete the task\n      await deleteTask(id);\n\n      // Update local state only after successful API call\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError('Failed to delete task: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //editing task\n  // Note: The API should return the updated task object after a successful update\n  const handleEditClick = task => {\n    setEditingTask(task.id);\n    setEditForm({\n      title: task.title,\n      dueDate: task.dueDate ? new Date(task.dueDate).toISOString().split('T')[0] : '',\n      priority: task.priority || 'medium',\n      category: task.category || ''\n    });\n  };\n  const handleEditSubmit = async id => {\n    try {\n      await updateTask(id, editForm);\n      setEditingTask(null);\n      fetchTasks(); // Refresh the task list\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError('Failed to update task: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const formatDueDate = dueDate => {\n    const date = new Date(dueDate);\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    // Check if due date is today\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    }\n    // Check if due date is tomorrow\n    if (date.toDateString() === tomorrow.toDateString()) {\n      return 'Tomorrow';\n    }\n    // Format other dates\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\n    });\n  };\n  const groupTasks = tasks => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const nextWeek = new Date(today);\n    nextWeek.setDate(today.getDate() + 7);\n    return {\n      today: tasks.filter(task => {\n        const taskDate = new Date(task.dueDate);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate.getTime() === today.getTime();\n      }),\n      upcoming: tasks.filter(task => {\n        const taskDate = new Date(task.dueDate);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > today && taskDate <= nextWeek;\n      }),\n      later: tasks.filter(task => {\n        const taskDate = new Date(task.dueDate);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > nextWeek;\n      }),\n      noDueDate: tasks.filter(task => !task.dueDate)\n    };\n  };\n  const renderTaskGroup = (tasks, title) => {\n    if (!tasks || tasks.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"task-group-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo-item ${task.completed ? 'completed' : ''}`,\n        children: editingTask === task.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editForm.title,\n            onChange: e => setEditForm({\n              ...editForm,\n              title: e.target.value\n            }),\n            className: \"edit-input\",\n            placeholder: \"Task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editForm.dueDate,\n            onChange: e => setEditForm({\n              ...editForm,\n              dueDate: e.target.value\n            }),\n            className: \"edit-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editForm.priority,\n            onChange: e => setEditForm({\n              ...editForm,\n              priority: e.target.value\n            }),\n            className: \"edit-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editForm.category,\n            onChange: e => setEditForm({\n              ...editForm,\n              category: e.target.value\n            }),\n            className: \"edit-input\",\n            placeholder: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditSubmit(task.id),\n              className: \"save-btn\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingTask(null),\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => handleUpdate(task.id, {\n                completed: !task.completed\n              }),\n              className: \"todo-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todo-title\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-metadata\",\n                children: [task.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `todo-due-date ${new Date(task.dueDate) < new Date() && !task.completed ? 'overdue' : new Date(task.dueDate).toDateString() === new Date().toDateString() ? 'due-today' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 27\n                  }, this), formatDueDate(task.dueDate), new Date(task.dueDate) < new Date() && !task.completed && /*#__PURE__*/_jsxDEV(AlertCircle, {\n                    size: 14,\n                    className: \"ml-1 inline-icon text-red-500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this), task.priority && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `todo-priority ${task.priority === 'high' ? 'text-red-500' : task.priority === 'medium' ? 'text-yellow-500' : 'text-green-500'}`,\n                  children: [/*#__PURE__*/_jsxDEV(Flag, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 27\n                  }, this), task.priority.charAt(0).toUpperCase() + task.priority.slice(1)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this), task.category && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"todo-category\",\n                  children: [/*#__PURE__*/_jsxDEV(Tag, {\n                    size: 14,\n                    className: \"inline-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 27\n                  }, this), task.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(task),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              className: \"delete-btn\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-loading\",\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 12\n    }, this);\n  }\n  const groupedTasks = groupTasks(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-tasks\",\n      children: \"No tasks found. Add a task to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderTaskGroup(groupedTasks.today, \"Today's Tasks\"), renderTaskGroup(groupedTasks.upcoming, \"This Week's Tasks\"), renderTaskGroup(groupedTasks.later, \"Upcoming Tasks\"), renderTaskGroup(groupedTasks.noDueDate, \"Tasks without Due Date\")]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"vc/JTEU9OTkwaXhwCqr5Aj00SCU=\", false, function () {\n  return [useAuth];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Flag","Tag","AlertCircle","X","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_s","getTasks","updateTask","deleteTask","tasks","setTasks","loading","setLoading","error","setError","editingTask","setEditingTask","editForm","setEditForm","title","dueDate","priority","category","fetchTasks","tasksData","err","handleUpdate","id","updatedTask","updatedTasks","map","task","_err$response","_err$response$data","response","data","message","handleDelete","filter","_err$response2","_err$response2$data","handleEditClick","Date","toISOString","split","handleEditSubmit","_err$response3","_err$response3$data","formatDueDate","date","today","tomorrow","setDate","getDate","toDateString","toLocaleDateString","month","day","year","getFullYear","undefined","groupTasks","setHours","nextWeek","taskDate","getTime","upcoming","later","noDueDate","renderTaskGroup","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","completed","type","value","onChange","e","target","placeholder","onClick","checked","size","charAt","toUpperCase","slice","groupedTasks","_c","$RefreshReg$"],"sources":["C:/Users/keshi/Desktop/To Do List App/Frontend/bgs-todo-app/src/components/pages/todolist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, Flag, Tag, AlertCircle, X } from 'lucide-react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport '../assets/css/todoitem.css';\r\n\r\nconst TodoItem = () => {\r\n  const { getTasks, updateTask, deleteTask } = useAuth();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  const [editForm, setEditForm] = useState({\r\n    title: '',\r\n    dueDate: '',\r\n    priority: '',\r\n    category: ''\r\n  });\r\n  \r\n  useEffect(() => {\r\n    fetchTasks();\r\n  \r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const tasksData = await getTasks();\r\n      setTasks(tasksData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch tasks');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //updting task\r\n  // Note: The API should return the updated task object after a successful update\r\n  const handleUpdate = async (id, updatedTask) => {\r\n    try {\r\n      setLoading(true);\r\n      // Call the API to update the task\r\n      await updateTask(id, updatedTask);\r\n      \r\n      // Update local state only after successful API call\r\n      const updatedTasks = tasks.map(task => \r\n        task.id === id ? { ...task, ...updatedTask } : task\r\n      );\r\n      setTasks(updatedTasks);\r\n    } catch (err) {\r\n      setError('Failed to update task: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  //deteleting task\r\n  // Note: The API should return a success message or status code after deletion\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      // Call the API to delete the task\r\n      await deleteTask(id);\r\n      \r\n      // Update local state only after successful API call\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (err) {\r\n      setError('Failed to delete task: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //editing task\r\n  // Note: The API should return the updated task object after a successful update\r\n  const handleEditClick = (task) => {\r\n    setEditingTask(task.id);\r\n    setEditForm({\r\n      title: task.title,\r\n      dueDate: task.dueDate ? new Date(task.dueDate).toISOString().split('T')[0] : '',\r\n      priority: task.priority || 'medium',\r\n      category: task.category || ''\r\n    });\r\n  };\r\n\r\n  const handleEditSubmit = async (id) => {\r\n    try {\r\n      await updateTask(id, editForm);\r\n      setEditingTask(null);\r\n      fetchTasks(); // Refresh the task list\r\n    } catch (err) {\r\n      setError('Failed to update task: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const formatDueDate = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    const today = new Date();\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n    // Check if due date is today\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Today';\r\n    }\r\n    // Check if due date is tomorrow\r\n    if (date.toDateString() === tomorrow.toDateString()) {\r\n      return 'Tomorrow';\r\n    }\r\n    // Format other dates\r\n    return date.toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: date.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\r\n    });\r\n  };\r\n\r\n  const groupTasks = (tasks) => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const nextWeek = new Date(today);\r\n    nextWeek.setDate(today.getDate() + 7);\r\n\r\n    return {\r\n      today: tasks.filter(task => {\r\n        const taskDate = new Date(task.dueDate);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate.getTime() === today.getTime();\r\n      }),\r\n      upcoming: tasks.filter(task => {\r\n        const taskDate = new Date(task.dueDate);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate > today && taskDate <= nextWeek;\r\n      }),\r\n      later: tasks.filter(task => {\r\n        const taskDate = new Date(task.dueDate);\r\n        taskDate.setHours(0, 0, 0, 0);\r\n        return taskDate > nextWeek;\r\n      }),\r\n      noDueDate: tasks.filter(task => !task.dueDate)\r\n    };\r\n  };\r\n\r\n  const renderTaskGroup = (tasks, title) => {\r\n    if (!tasks || tasks.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"task-group\">\r\n        <h2 className=\"task-group-title\">{title}</h2>\r\n        {tasks.map(task => (\r\n          <div key={task.id} className={`todo-item ${task.completed ? 'completed' : ''}`}>\r\n            {editingTask === task.id ? (\r\n              <div className=\"edit-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.title}\r\n                  onChange={(e) => setEditForm({...editForm, title: e.target.value})}\r\n                  className=\"edit-input\"\r\n                  placeholder=\"Task title\"\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  value={editForm.dueDate}\r\n                  onChange={(e) => setEditForm({...editForm, dueDate: e.target.value})}\r\n                  className=\"edit-input\"\r\n                />\r\n                <select\r\n                  value={editForm.priority}\r\n                  onChange={(e) => setEditForm({...editForm, priority: e.target.value})}\r\n                  className=\"edit-input\"\r\n                >\r\n                  <option value=\"low\">Low</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"high\">High</option>\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editForm.category}\r\n                  onChange={(e) => setEditForm({...editForm, category: e.target.value})}\r\n                  className=\"edit-input\"\r\n                  placeholder=\"Category\"\r\n                />\r\n                <div className=\"edit-actions\">\r\n                  <button \r\n                    onClick={() => handleEditSubmit(task.id)}\r\n                    className=\"save-btn\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button \r\n                    onClick={() => setEditingTask(null)}\r\n                    className=\"cancel-btn\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"todo-content\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={() => handleUpdate(task.id, { completed: !task.completed })}\r\n                    className=\"todo-checkbox\"\r\n                  />\r\n                  <div className=\"todo-details\">\r\n                    <span className=\"todo-title\">{task.title}</span>\r\n                    \r\n                    <div className=\"todo-metadata\">\r\n                      {task.dueDate && (\r\n                        <span className={`todo-due-date ${\r\n                          new Date(task.dueDate) < new Date() && !task.completed \r\n                            ? 'overdue' \r\n                            : new Date(task.dueDate).toDateString() === new Date().toDateString() \r\n                              ? 'due-today'\r\n                              : ''\r\n                        }`}>\r\n                          <Calendar size={14} className=\"inline-icon\" />\r\n                          {formatDueDate(task.dueDate)}\r\n                          {new Date(task.dueDate) < new Date() && !task.completed && (\r\n                            <AlertCircle size={14} className=\"ml-1 inline-icon text-red-500\" />\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                      \r\n                      {task.priority && (\r\n                        <span className={`todo-priority ${task.priority === 'high' ? 'text-red-500' : task.priority === 'medium' ? 'text-yellow-500' : 'text-green-500'}`}>\r\n                          <Flag size={14} className=\"inline-icon\" />\r\n                          {task.priority.charAt(0).toUpperCase() + task.priority.slice(1)}\r\n                        </span>\r\n                      )}\r\n                      \r\n                      {task.category && (\r\n                        <span className=\"todo-category\">\r\n                          <Tag size={14} className=\"inline-icon\" />\r\n                          {task.category}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"todo-actions\">\r\n                  <button onClick={() => handleEditClick(task)} className=\"edit-btn\">\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDelete(task.id)} className=\"delete-btn\">\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"todo-list-loading\">Loading tasks...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"todo-list-error\">{error}</div>;\r\n  }\r\n\r\n  const groupedTasks = groupTasks(tasks);\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {tasks.length === 0 ? (\r\n        <div className=\"no-tasks\">No tasks found. Add a task to get started!</div>\r\n      ) : (\r\n        <>\r\n          {renderTaskGroup(groupedTasks.today, \"Today's Tasks\")}\r\n          {renderTaskGroup(groupedTasks.upcoming, \"This Week's Tasks\")}\r\n          {renderTaskGroup(groupedTasks.later, \"Upcoming Tasks\")}\r\n          {renderTaskGroup(groupedTasks.noDueDate, \"Tasks without Due Date\")}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}